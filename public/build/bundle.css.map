{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "PageNav.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">// NOTE: yes, I know this file looks intimidating and is terrible for web devs\r\n// at the moment lol - I'll get to moving things around into their own component files\r\n// a little later. I was just focused on basic functionality and getting things\r\n// out there for now.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport marked, { Slugger } from 'marked';\r\nimport hotable from 'handsontable';\r\nimport { onMount, tick } from 'svelte';\r\nimport PageNav from './components/PageNav.svelte';\r\n// https://www.30secondsofcode.org/blog/s/copy-text-to-clipboard-with-javascript\r\nconst copyToClipboard = str => {\r\n    const el = document.createElement('textarea');\r\n    el.value = str;\r\n    el.setAttribute('readonly', '');\r\n    el.style.position = 'absolute';\r\n    el.style.left = '-9999px';\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n};\r\n// https://stackoverflow.com/a/43849204\r\nconst resolvePath = (object, path, defaultValue) => path\r\n    .split('.')\r\n    .reduce((o, p) => o ? o[p] : defaultValue, object);\r\nhotable.renderers.registerRenderer(\"hex\", (instance, td, row, col, prop, value, cellProperties) => {\r\n    td.style.fontFamily = \"monospace\";\r\n    td.style.fontWeight = \"bold\";\r\n    td.style.textAlign = \"center\";\r\n    if (typeof value === \"string\") {\r\n        td.innerText = \"0x\" + (value.startsWith(\"0x\") ? parseInt(value, 16) : parseInt(value)).toString(16).toUpperCase();\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        td.innerText = \"0x\" + value.toString(16).toUpperCase();\r\n    }\r\n    else {\r\n        td.innerText = \"NaN\";\r\n    }\r\n    if (cellProperties.readOnly) {\r\n        td.className = \"htDimmed\";\r\n    }\r\n    return td;\r\n});\r\nconst tables = [];\r\nlet TOC = [];\r\nlet TOCIsActive = false;\r\nlet sidebarIsActive = false;\r\nlet lastPage = localStorage.getItem(\"lastPage\");\r\nlet pageScripts = [];\r\nconst renderer = {\r\n    // @ts-ignore\r\n    code(code, language, isEscaped) {\r\n        if (language !== \"handsontable\") {\r\n            return false;\r\n        }\r\n        const HOTConfig = {\r\n            nestedHeaders: [[]],\r\n            data: [],\r\n            columns: [],\r\n            manualColumnResize: true,\r\n            licenseKey: \"non-commercial-and-evaluation\",\r\n            mergeCells: [],\r\n            height: 'auto',\r\n            readOnly: true,\r\n            modifyColWidth: (width, col) => {\r\n                if (width > 300) {\r\n                    return 300;\r\n                }\r\n                return width;\r\n            }\r\n        };\r\n        // determines what to do and when\r\n        let parseMode = null;\r\n        let currentOptions = {};\r\n        let currentCol = 0;\r\n        let headingGroupPath = [];\r\n        let matchCurrentCol = () => {\r\n            for (const [idx, col] of HOTConfig.nestedHeaders.entries()) {\r\n                if (headingGroupPath[idx]) {\r\n                    headingGroupPath[idx].colspan++;\r\n                }\r\n                else {\r\n                    const currLen = col.reduce((acc, curr) => acc + (([\"undefined\", \"string\"].includes(typeof curr)) ? 1 : curr.colspan), 0);\r\n                    if (currentCol > currLen)\r\n                        col.push(...new Array(currentCol - currLen));\r\n                }\r\n            }\r\n        };\r\n        for (const line of code.split(\"\\n\")) {\r\n            if (line.startsWith(\"# OPTIONS\")) {\r\n                parseMode = \"options\";\r\n                continue;\r\n            }\r\n            else if (line.startsWith(\"# COLUMNS\")) {\r\n                parseMode = \"columns\";\r\n                continue;\r\n            }\r\n            else if (line.startsWith(\"# DATA\")) {\r\n                parseMode = \"data\";\r\n                continue;\r\n            }\r\n            switch (parseMode) {\r\n                case \"options\": {\r\n                    const options = line.split(\":\").map(v => v.trim());\r\n                    if ([\"true\", \"false\"].includes(options[1]))\r\n                        HOTConfig[options[0]] = (options[1] === \"true\") ? true : false;\r\n                    else\r\n                        HOTConfig[options[0]] = options[1];\r\n                    continue;\r\n                }\r\n                case \"columns.options\": {\r\n                    if (line.trim() === \"}\") {\r\n                        HOTConfig.columns.push(currentOptions);\r\n                        currentOptions = {};\r\n                        parseMode = \"columns\";\r\n                        continue;\r\n                    }\r\n                    const options = line.split(\":\").map(v => v.trim());\r\n                    if ([\"true\", \"false\"].includes(options[1]))\r\n                        currentOptions[options[0]] = (options[1] === \"true\") ? true : false;\r\n                    else\r\n                        currentOptions[options[0]] = options[1];\r\n                    continue;\r\n                }\r\n                case \"columns\": {\r\n                    if (line.endsWith(\"[\")) {\r\n                        headingGroupPath.push({ label: line.substr(0, line.length - 2).trim(), colspan: 0 });\r\n                        if (HOTConfig.nestedHeaders.length <= headingGroupPath.length) {\r\n                            const newHeaderRow = [];\r\n                            if (currentCol > 0)\r\n                                newHeaderRow.push(...new Array(currentCol));\r\n                            HOTConfig.nestedHeaders.push(newHeaderRow);\r\n                        }\r\n                    }\r\n                    else if (line.trim() === \"]\") {\r\n                        const newData = headingGroupPath.pop();\r\n                        HOTConfig.nestedHeaders[headingGroupPath.length].push(newData);\r\n                        // console.log(\"in-progress:\", JSON.parse(JSON.stringify(HOTConfig.nestedHeaders)));\r\n                    }\r\n                    else if (line.endsWith(\"{\")) {\r\n                        HOTConfig.nestedHeaders[headingGroupPath.length].push(line.substr(0, line.length - 2).trim());\r\n                        parseMode = \"columns.options\";\r\n                        currentCol++;\r\n                        matchCurrentCol();\r\n                    }\r\n                    else {\r\n                        HOTConfig.columns.push({});\r\n                        HOTConfig.nestedHeaders[headingGroupPath.length].push(line.trim());\r\n                        currentCol++;\r\n                        matchCurrentCol();\r\n                    }\r\n                    continue;\r\n                }\r\n                case \"data\": {\r\n                    const rowData = line.split(\"|\").map(d => d.trim().replace(/\\\\n/g, \"\\n\"));\r\n                    for (const [col, d] of rowData.entries()) {\r\n                        const reg = /^<\\$(?:w(?<width>\\d+))?\\s?(?:h(?<height>\\d+))?\\s?(?:s\"(?<styling>.+?)\")?\\>/gm;\r\n                        const results = reg.exec(d);\r\n                        if (!results)\r\n                            continue;\r\n                        if (results.groups.height || results.groups.width) {\r\n                            const cellHeight = parseInt(results.groups.height) || 1;\r\n                            const cellWidth = parseInt(results.groups.width) || 1;\r\n                            const row = HOTConfig.data.length;\r\n                            HOTConfig.mergeCells.push({\r\n                                col,\r\n                                row,\r\n                                colspan: cellWidth,\r\n                                rowspan: cellHeight\r\n                            });\r\n                        }\r\n                        rowData[col] = rowData[col].substring(results[0].length);\r\n                    }\r\n                    HOTConfig.data.push(rowData);\r\n                    continue;\r\n                }\r\n                default:\r\n                    continue;\r\n            }\r\n        }\r\n        // HOTConfig.nestedHeaders.reverse();\r\n        // if (HOTConfig.nestedHeaders.length > 1) console.log(HOTConfig.nestedHeaders);\r\n        const outHTML = `<div id=\"HOTable-${tables.length}\"></div>`;\r\n        tables.push(HOTConfig);\r\n        return outHTML;\r\n    },\r\n    // @ts-ignore\r\n    heading(text, level, raw, slugger) {\r\n        // @ts-ignore\r\n        TOC = [...TOC, { text: raw, level, id: slugger.slug(raw, { dryrun: true }) }];\r\n        return false;\r\n    },\r\n    // @ts-ignore\r\n    link(href, title, text) {\r\n        if (href.startsWith(\"/\")) {\r\n            const anchorPos = (href.indexOf(\"#\") == -1) ? undefined : href.indexOf(\"#\");\r\n            if (pages.includes(href.substring(1, anchorPos)))\r\n                // @ts-ignore\r\n                return `<a href=\"${window.location.origin}${window.location.pathname}?page=${href.substring(1, anchorPos)}&location=${new Slugger().slug(href.substr(href.indexOf(\"#\")), { dryrun: true })}\">${text}</a>`;\r\n            else\r\n                return `<span class=\"invalid-link\" data-targetpage=\"${href.substring(1, anchorPos)}\">${text}</span>`;\r\n        }\r\n        else if (href.startsWith(\"#\")) {\r\n            // @ts-ignore\r\n            return `<a href=\"${window.location.origin}${window.location.pathname}?page=${localStorage.getItem(\"lastPage\")}&location=${new Slugger().slug(href.substr(1), { dryrun: true })}\">${text}</a>`;\r\n        }\r\n        else if (href.includes(\"localhost\") || href.includes(\"brawlre.github.io\")) {\r\n            const targetPage = (new URLSearchParams(href.substring(href.indexOf(\"?\")))).get(\"page\");\r\n            if (pages.includes(targetPage))\r\n                return `<a href=\"${window.location.origin}${window.location.pathname}${href.replace(/https?:\\/\\/(?:localhost:\\d{4}|brawlre\\.github\\.io)/g, \"\")}\">${text}</a>`;\r\n            else\r\n                return `<span class=\"invalid-link\" data-targetpage=\"${targetPage}\">${text}</span>`;\r\n        }\r\n        return false;\r\n    },\r\n    // @ts-ignore\r\n    image(href, title, text) {\r\n        console.log(href, title, text);\r\n        if (text === \"SCRIPT\") {\r\n            if (window.location.hostname === \"localhost\") {\r\n                pageScripts = [...pageScripts, `${window.location.origin}${window.location.pathname}docs/${href.substring(1)}.js`];\r\n            }\r\n            else if (window.location.origin === \"https://brawlre.github.io\") {\r\n                pageScripts = [...pageScripts, `https://raw.githubusercontent.com/BrawlRE/BrawlRE.github.io/main/public/docs/${href.substring(1)}.js`];\r\n            }\r\n            return '';\r\n        }\r\n    }\r\n};\r\nmarked.use({ renderer });\r\nconst serializeHOTable = (htable) => {\r\n    const data = htable.getData();\r\n    const headingData = htable.getSettings().nestedHeaders;\r\n    const mergedCells = htable.getSettings().mergeCells;\r\n    const columnData = htable.getSettings().columns;\r\n    const optionData = Object.entries(Object.getPrototypeOf(htable.getSettings()));\r\n    console.log(columnData);\r\n    const modified = {};\r\n    for (const [name, value] of optionData) {\r\n        if (typeof value === \"boolean\" && value !== hotable.DefaultSettings[name])\r\n            modified[name] = value;\r\n    }\r\n    delete modified.contextMenu;\r\n    delete modified.manualColumnResize;\r\n    let out = \"```handsontable\\n\";\r\n    out += \"# OPTIONS\\n\";\r\n    for (const [option, value] of Object.entries(modified)) {\r\n        out += `${option}: ${value}\\n`;\r\n    }\r\n    out += \"# COLUMNS\\n\";\r\n    const indexesTraversed = new Array(headingData.length).fill(0);\r\n    const traverseTableHeadings = (layer, parentLength) => {\r\n        let idx = indexesTraversed[layer];\r\n        let currentTraversal = 0;\r\n        while (idx < headingData[layer].length && ![\"string\", \"object\"].includes(typeof headingData[layer][idx])) {\r\n            idx++;\r\n        }\r\n        while (currentTraversal < parentLength && idx < headingData[layer].length) {\r\n            if (typeof headingData[layer][idx] === \"object\") {\r\n                out += `${\"\".padStart(layer * 2, \" \")}${headingData[layer][idx].label} [\\n`;\r\n                traverseTableHeadings(layer + 1, headingData[layer][idx].colspan);\r\n                currentTraversal += headingData[layer][idx].colspan;\r\n            }\r\n            else if (typeof headingData[layer][idx] === \"string\") {\r\n                out += `${\"\".padStart(layer * 2, \" \")}${headingData[layer][idx]}`;\r\n                let currHeadingPos = 0;\r\n                for (let i = 0; i < idx; i++) {\r\n                    currHeadingPos += ([\"undefined\", \"string\"].includes(typeof headingData[layer][i])) ? 1 : headingData[layer][i].colspan;\r\n                }\r\n                if (Object.keys(columnData[currHeadingPos]).length > 0) {\r\n                    out += \" {\\n\";\r\n                    for (const [key, val] of Object.entries(columnData[currentTraversal])) {\r\n                        out += `${\"\".padStart((layer + 1) * 2, \" \")}${key}: ${val}\\n`;\r\n                    }\r\n                    out += `${\"\".padStart(layer * 2, \" \")}}\\n`;\r\n                }\r\n                else {\r\n                    out += \"\\n\";\r\n                }\r\n                currentTraversal += 1;\r\n            }\r\n            else {\r\n                currentTraversal += 1;\r\n            }\r\n            idx++;\r\n        }\r\n        if (layer !== 0)\r\n            out += `${\"\".padStart((layer - 1) * 2, \" \")}]\\n`;\r\n        indexesTraversed[layer] = idx;\r\n    };\r\n    traverseTableHeadings(0, headingData[0].reduce((acc, curr) => acc + (([\"undefined\", \"string\"].includes(typeof curr)) ? 1 : curr.colspan), 0));\r\n    out += \"# DATA\\n\";\r\n    for (const merged of mergedCells) {\r\n        data[merged.row][merged.col] = `<$w${merged.colspan}h${merged.rowspan}>` + data[merged.row][merged.col];\r\n    }\r\n    for (let i = 0; i < data.length; i++) {\r\n        data[i] = data[i].join(\"|\").replace(/\\r?\\n/g, \"\\\\n\");\r\n    }\r\n    out += data.join(\"\\n\");\r\n    out += \"\\n```\";\r\n    return out;\r\n};\r\nlet markedHTMLOut = \"\";\r\nconst updatePageContent = (contentName) => __awaiter(void 0, void 0, void 0, function* () {\r\n    localStorage.setItem(\"lastPage\", contentName);\r\n    lastPage = contentName;\r\n    tables.length = 0;\r\n    TOC.length = 0;\r\n    if (window.location.hostname === \"localhost\")\r\n        markedHTMLOut = marked((yield (yield fetch(\"./docs/\" + contentName + \".md\")).text()));\r\n    else\r\n        markedHTMLOut = marked((yield (yield fetch(\"https://raw.githubusercontent.com/BrawlRE/BrawlRE.github.io/main/public/docs/\" + contentName + \".md\")).text()));\r\n    for (const src of pageScripts) {\r\n        console.log(src);\r\n        eval(yield (yield fetch(src)).text());\r\n    }\r\n    pageScripts = [];\r\n    // pageScripts = [];\r\n    yield tick();\r\n    if (tables.length > 10) {\r\n        for (const [idx, tableConfig] of tables.entries()) {\r\n            const renderBtn = document.createElement(\"button\");\r\n            renderBtn.innerText = \"show table\";\r\n            renderBtn.onclick = () => {\r\n                const tableBaseEl = document.getElementById(`HOTable-${idx}`);\r\n                tableBaseEl.innerHTML = \"\";\r\n                const tableToggleButton = document.createElement(\"button\");\r\n                tableToggleButton.innerText = \"hide table\";\r\n                const tableEditCopyButton = document.createElement(\"button\");\r\n                tableEditCopyButton.innerText = \"edit table\";\r\n                const tableDisplayEl = document.createElement(\"div\");\r\n                const toggleTableVisibilityFn = () => {\r\n                    tableToggleButton.innerText = ((tableDisplayEl.style.display === \"none\") ? \"hide\" : \"show\") + \" table\";\r\n                    tableEditCopyButton.style.display = (tableDisplayEl.style.display === \"none\") ? \"inline-block\" : \"none\";\r\n                    tableDisplayEl.style.display = (tableDisplayEl.style.display === \"none\") ? \"inline-block\" : \"none\";\r\n                };\r\n                tableToggleButton.onclick = toggleTableVisibilityFn;\r\n                tableBaseEl.appendChild(tableToggleButton);\r\n                tableBaseEl.appendChild(tableEditCopyButton);\r\n                tableBaseEl.appendChild(tableDisplayEl);\r\n                const htable = new hotable(tableDisplayEl, tableConfig);\r\n                const enableEditFn = () => {\r\n                    htable.updateSettings({\r\n                        readOnly: false,\r\n                        contextMenu: true,\r\n                        allowInsertColumn: true,\r\n                        allowInsertRow: true,\r\n                    });\r\n                    tableEditCopyButton.innerText = \"copy as markdown\";\r\n                    tableToggleButton.onclick = () => {\r\n                        htable.updateSettings({\r\n                            readOnly: true,\r\n                            contextMenu: false\r\n                        });\r\n                        tableToggleButton.onclick = toggleTableVisibilityFn;\r\n                        tableToggleButton.innerText = \"hide table\";\r\n                        tableEditCopyButton.innerText = \"edit table\";\r\n                        tableEditCopyButton.onclick = enableEditFn;\r\n                    };\r\n                    tableToggleButton.innerText = \"stop editing\";\r\n                    tableEditCopyButton.onclick = () => {\r\n                        copyToClipboard(serializeHOTable(htable));\r\n                    };\r\n                };\r\n                tableEditCopyButton.onclick = enableEditFn;\r\n            };\r\n            document.getElementById(`HOTable-${idx}`).appendChild(renderBtn);\r\n        }\r\n    }\r\n    else {\r\n        for (const [idx, tableConfig] of tables.entries()) {\r\n            const tableBaseEl = document.getElementById(`HOTable-${idx}`);\r\n            const tableToggleButton = document.createElement(\"button\");\r\n            tableToggleButton.innerText = \"hide table\";\r\n            const tableEditCopyButton = document.createElement(\"button\");\r\n            tableEditCopyButton.innerText = \"edit table\";\r\n            const tableDisplayEl = document.createElement(\"div\");\r\n            const toggleTableVisibilityFn = () => {\r\n                tableToggleButton.innerText = ((tableDisplayEl.style.display === \"none\") ? \"hide\" : \"show\") + \" table\";\r\n                tableEditCopyButton.style.display = (tableDisplayEl.style.display === \"none\") ? \"inline-block\" : \"none\";\r\n                tableDisplayEl.style.display = (tableDisplayEl.style.display === \"none\") ? \"inline-block\" : \"none\";\r\n            };\r\n            tableToggleButton.onclick = toggleTableVisibilityFn;\r\n            tableBaseEl.appendChild(tableToggleButton);\r\n            tableBaseEl.appendChild(tableEditCopyButton);\r\n            tableBaseEl.appendChild(tableDisplayEl);\r\n            const htable = new hotable(tableDisplayEl, tableConfig);\r\n            const enableEditFn = () => {\r\n                htable.updateSettings({\r\n                    readOnly: false,\r\n                    contextMenu: true,\r\n                    allowInsertColumn: true,\r\n                    allowInsertRow: true,\r\n                });\r\n                tableEditCopyButton.innerText = \"copy as markdown\";\r\n                tableToggleButton.onclick = () => {\r\n                    htable.updateSettings({\r\n                        readOnly: true,\r\n                        contextMenu: false\r\n                    });\r\n                    tableToggleButton.onclick = toggleTableVisibilityFn;\r\n                    tableToggleButton.innerText = \"hide table\";\r\n                    tableEditCopyButton.innerText = \"edit table\";\r\n                    tableEditCopyButton.onclick = enableEditFn;\r\n                };\r\n                tableToggleButton.innerText = \"stop editing\";\r\n                tableEditCopyButton.onclick = () => {\r\n                    copyToClipboard(serializeHOTable(htable));\r\n                };\r\n            };\r\n            tableEditCopyButton.onclick = enableEditFn;\r\n        }\r\n    }\r\n    for (const heading of document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")) {\r\n        heading.addEventListener(\"click\", () => {\r\n            copyToClipboard(`${window.location.origin}${window.location.pathname}?page=${contentName}&location=${heading.id}`);\r\n        });\r\n    }\r\n});\r\n// incredibly basic implementation - easy to break BUT ALSO very intuitive to use\r\nlet pages = [];\r\nlet pageDirStructure = { label: \"_root\", children: [] };\r\n(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const indentSize = 2;\r\n    let pageDataLines;\r\n    if (window.location.hostname === \"localhost\")\r\n        pageDataLines = (yield (yield fetch(\"./docs/_pages.txt\")).text()).replace(/\\r/g, \"\").split(\"\\n\");\r\n    else\r\n        pageDataLines = (yield (yield fetch(\"https://raw.githubusercontent.com/BrawlRE/BrawlRE.github.io/main/public/docs/_pages.txt\")).text()).replace(/\\r/g, \"\").split(\"\\n\");\r\n    const pathStack = [];\r\n    const pathDirStack = [pageDirStructure];\r\n    let lastIndentLevel = 0;\r\n    for (const line of pageDataLines) {\r\n        const thisIndentLevel = line.search(/\\S/);\r\n        if (thisIndentLevel < lastIndentLevel) {\r\n            const levels = (lastIndentLevel - thisIndentLevel) / indentSize;\r\n            for (let i = 0; i < levels; i++)\r\n                pathStack.pop();\r\n            pathDirStack.length = pathStack.length + 1;\r\n            lastIndentLevel = thisIndentLevel;\r\n        }\r\n        else {\r\n            lastIndentLevel = thisIndentLevel;\r\n        }\r\n        pages = [...pages, pathStack.join('') + line.trim()];\r\n        if (line.endsWith(\"/\")) {\r\n            pathStack.push(line.trim());\r\n            pathDirStack[pathDirStack.length - 1].children.push({ label: line.trim(), children: [] });\r\n            pathDirStack.push(pathDirStack[pathDirStack.length - 1].children.slice(-1)[0]);\r\n            lastIndentLevel += 2;\r\n        }\r\n        else {\r\n            pathDirStack[pathDirStack.length - 1].children.push(line.trim());\r\n        }\r\n    }\r\n    // svelte will update because I said so\r\n    pageDirStructure = pageDirStructure;\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const linkedPage = urlParams.get('page');\r\n    const linkedLocation = urlParams.get('location');\r\n    yield updatePageContent(linkedPage || localStorage.getItem(\"lastPage\") || \"index\");\r\n    // @ts-ignore\r\n    if (linkedLocation)\r\n        document.getElementById(new marked.Slugger().slug(linkedLocation, { dryrun: true })).scrollIntoView();\r\n}))();\r\n</script>\n\n<header>\n  <button class=\"sidebarButton\" on:click={() => sidebarIsActive = true}> pages </button>\n  <button class=\"navButton\" on:click={() => TOCIsActive = true}> content </button>\n</header>\n<div class=\"offToggle {sidebarIsActive || TOCIsActive ? 'active' : ''}\" on:click={() => {TOCIsActive = false; sidebarIsActive = false;}}></div>\n\n<main>\n  <div class=\"sidebar {sidebarIsActive ? 'active' : ''}\">\n    <div class=\"list\">\n      <PageNav {pageDirStructure} clickEvt={updatePageContent} {lastPage} />\n      <!-- {#each pages as page}\n        {#if page.endsWith(\"/\")}\n        <div\n          class=\"nav-dir-header\"\n          style=\"margin-left: {(page.split('/').length - 2) * 10}px\"\n        >\n          <span>{page.split(\"/\")[page.split(\"/\").length - 2] + \"/\"}</span>\n        </div>\n        {:else}\n          <div\n            class=\"nav-link {(lastPage === page) ? \"current\" : \"\"}\"\n            on:click={() => updatePageContent(page)}\n            style=\"margin-left: {(page.split('/').length - 1) * 10}px;\"\n          >\n            {page.split(\"/\")[page.split(\"/\").length - 1]}\n          </div>\n        {/if}\n      {/each} -->\n    </div>\n  </div>\n  <div class=\"content\">\n      {@html markedHTMLOut}\n  </div>\n  <div class=\"TOC {TOCIsActive ? 'active' : ''}\">\n    <ul>\n      {#each TOC as header}\n        <li style=\"margin-left: {(header.level - 1) * 10}px\"><a href=\"#{header.id}\">{header.text}</a></li>\n      {/each}\n    </ul>\n  </div>\n</main>\n\n<style>\nmain {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n}\n\nmain > .sidebar {\n  width: 250px;\n  height: 100vh;\n  box-shadow: inset -2px 0 2px #0004;\n  background-color: #FFF;\n  flex-shrink: 0;\n  overflow-y: scroll;\n  padding-left: 10px;\n  padding-top: 10px;\n}\n\n/* main > .sidebar::-webkit-scrollbar {\n  display: none;\n} */\n\nmain > .sidebar > .list {\n  width: 100%;\n  height: 100%;\n  font-size: 16px;\n  background-color: #FFF;\n}\n\nmain > .content {\n  height: 100vh;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  flex-grow: 1;\n}\n\n/* main > .content::-webkit-scrollbar {\n  display: none;\n} */\n\n:global(.wtHider) {\n  /* idk why but it breaks without this extremly hacky solution :( */\n  height: initial !important;\n}\n\n:global(.invalid-link) {\n  color: #F00;\n  position: relative;\n}\n:global(.invalid-link::after) {\n  content: attr(data-targetpage);\n  opacity: 0;\n  background-color: black;\n  color: white;\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  top: 0;\n  height: 20px;\n  padding: 2px;\n  border-radius: 2px;\n  transition: all .3s cubic-bezier(0.19, 1, 0.22, 1);\n}\n:global(.invalid-link:hover) {\n  text-decoration: underline;\n}\n:global(.invalid-link:hover::after) {\n  top: -25px;\n  opacity: 1;\n  transition: all .3s cubic-bezier(0.19, 1, 0.22, 1);\n}\n\nmain > .TOC > ul {\n  box-shadow: inset 2px 0 2px #0004;\n\n  padding: 20px;\n  margin: 0;\n  width: 200px;\n  list-style: none;\n  height: 100vh;\n  overflow-y: scroll;\n\n  flex-shrink: 0;\n}\n\nmain > .TOC > ul > li {\n  margin: 0;\n}\n\n:global(h1:hover, h2:hover, h3:hover, h4:hover, h5:hover, h6:hover) {\n  cursor: pointer;\n  text-shadow: 0 1px 3px #0004;\n}\n\n:global(h1:hover::before, h2:hover::before, h3:hover::before, h4:hover::before, h5:hover::before, h6:hover::before) {\n  content: \"🔗\";\n  display: inline;\n  /* position: inline; */\n  /* right: 100%;\n  margin: auto; */\n}\n\nheader {\n  display: none;\n}\n\n@media only screen and (max-width: 1000px) {\n  main > .sidebar {\n    display: block;\n    position: fixed;\n    width: 250px;\n    left: -250px;\n    z-index: 1002;\n    transition: left .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  main > .sidebar.active {\n    left: 0px;\n    transition: left .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  main > .TOC {\n    display: block;\n    position: fixed;\n    background-color: #FFF;\n    width: 250px;\n    right: -250px;\n    z-index: 1002;\n    transition: right .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  main > .TOC.active {\n    right: 0px;\n    transition: right .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  .offToggle {\n    position: fixed;\n    pointer-events: none;\n    background-color: #0000;\n    width: 100vw;\n    height: 100vh;\n    z-index: 1001;\n    transition: background-color .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  .offToggle.active {\n    background-color: #0003;\n    pointer-events: auto;\n    transition: background-color .3s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  /* kinda hacky but it works ahahah */\n  header {\n    display: block;\n    position: fixed;\n    height: 65px;\n    padding: 20px;\n    width: 100vw;\n    background-color: #FFF;\n    box-shadow: 0 1px 3px #0004;\n    z-index: 1000\n  }\n\n  header > .sidebarButton {\n    float: left;\n  }\n\n\n\n  header > .navButton {\n    float: right;\n  }\n\n  main > .content {\n    margin-top: 65px;\n    height: calc(100vh - 65px);\n  }\n\n  :global(.htDimmed) {\n    pointer-events: none;\n  }\n}\n</style>",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport let pageDirStructure = { label: '_', children: [] };\r\nexport let pageRoot = '';\r\nexport let lastPage = '';\r\nexport let clickEvt = () => __awaiter(void 0, void 0, void 0, function* () { });\r\nconst getChildrenCount = (pd) => {\r\n    let out = 0;\r\n    for (const ch of pd.children) {\r\n        if (typeof ch !== \"string\")\r\n            out += getChildrenCount(ch);\r\n        out++;\r\n    }\r\n    return out;\r\n};\r\n</script>\r\n\r\n{#each pageDirStructure.children as child}\r\n  {#if typeof child === \"string\"}\r\n    <div\r\n      class=\"nav-link {(lastPage === pageRoot + child) ? \"current\" : \"\"}\"\r\n      on:click={(evt) => {evt.stopPropagation(); clickEvt(pageRoot + child)}}\r\n    >\r\n      {child.replace(/_/g, \" \")}\r\n    </div>\r\n  {:else}\r\n    <div\r\n      class=\"nav-dir-header active\"\r\n      on:click={function(evt) {evt.stopPropagation(); this.classList.toggle(\"active\")}}\r\n    >\r\n      <span>{child.label}</span>\r\n      <div class=\"nav-dir-links\" style=\"max-height: {getChildrenCount(child) * 25}px\">\r\n        <svelte:self\r\n          pageDirStructure={child}\r\n          pageRoot={pageRoot + child.label}\r\n          {lastPage}\r\n          {clickEvt}\r\n        />\r\n      </div>\r\n    </div>\r\n  {/if}\r\n{/each}\r\n\r\n<style>\r\n\r\n.nav-dir-links {\r\n  transition: max-height .3s cubic-bezier(0.19, 1, 0.22, 1);\r\n  overflow: hidden;\r\n  background-color: #FFF;\r\n  padding-left: 10px;\r\n  position: relative;\r\n}\r\n\r\n.nav-dir-links::before {\r\n  content: '';\r\n  display: block;\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 2px;\r\n  left: 5px;\r\n  background-color: #0001;\r\n}\r\n\r\n:global(.nav-dir-header:not(.active) > .nav-dir-links) {\r\n  max-height: 0px !important;\r\n  pointer-events: none;\r\n}\r\n\r\n/* .nav-dir-header {\r\n  background-color: #222;\r\n} */\r\n\r\n.nav-dir-header > span {\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 25px;\r\n  line-height: 25px;\r\n  font-weight: bold;\r\n  color: #000;\r\n  user-select: none;\r\n}\r\n\r\n.nav-dir-header > span:hover {\r\n  background-color: #0001;\r\n}\r\n\r\n.nav-dir-header > span::before {\r\n  display: inline-block;\r\n  content: \"›\";\r\n  padding: 0 5px;\r\n  transform: rotate(0deg);\r\n  /* transition: transform .3s cubic-bezier(0.19, 1, 0.22, 1); */\r\n}\r\n\r\n.nav-dir-header.active > span::before {\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.nav-link {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 25px;\r\n  padding-left: 5px;\r\n  position: relative;\r\n}\r\n\r\n.nav-link:hover {\r\n  background-color: #0001;\r\n  cursor: pointer;\r\n}\r\n\r\n.nav-link.current {\r\n  pointer-events: none;\r\n  background-color: #0001;\r\n  padding-left: 10px;\r\n}\r\n.nav-link.current::before {\r\n  content: '';\r\n  position: absolute;\r\n  display: block;\r\n  right: 100%;\r\n  height: 100%;\r\n  width: 5px;\r\n  /* margin-right: -5px; */\r\n  background-color: red;\r\n}\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}